import 'user_model.dart';

/// Response model for authentication API calls (login/register).
///
/// Contains JWT tokens and user information returned by the backend
/// after successful authentication.
class AuthResponse {
  /// JWT access token for authenticated requests
  final String accessToken;

  /// JWT refresh token for renewing access tokens
  final String refreshToken;

  /// User information returned with authentication
  final User user;

  AuthResponse({
    required this.accessToken,
    required this.refreshToken,
    required this.user,
  });

  factory AuthResponse.fromJson(Map<String, dynamic> json) {
    return AuthResponse(
      accessToken: json['access'] ?? json['access_token'] ?? '',
      refreshToken: json['refresh'] ?? json['refresh_token'] ?? '',
      user: User.fromJson(json['user'] ?? json),
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'access': accessToken,
      'refresh': refreshToken,
      'user': user.toJson(),
    };
  }
}

/// Request model for user login API call.
///
/// Contains the credentials required for authentication.
class LoginRequest {
  /// User's email address
  final String email;

  /// User's password
  final String password;

  LoginRequest({required this.email, required this.password});

  Map<String, dynamic> toJson() {
    return {'email': email, 'password': password};
  }
}

/// Request model for user registration API call.
///
/// Contains all required and optional fields for creating a new user account.
/// The id field is auto-generated by the backend and not included.
class RegisterRequest {
  /// User's first name (required)
  final String firstName;

  /// User's last name (required)
  final String lastName;

  /// User's email address (required, must be unique)
  final String email;

  /// User's password (required)
  final String password;

  /// Optional username (must be unique if provided)
  final String? username;

  /// Optional phone number (must be unique if provided)
  final String? phoneNumber;

  RegisterRequest({
    required this.firstName,
    required this.lastName,
    required this.email,
    required this.password,
    this.username,
    this.phoneNumber,
  });

  Map<String, dynamic> toJson() {
    return {
      'first_name': firstName,
      'last_name': lastName,
      'email': email,
      'password': password,
      if (username != null) 'username': username,
      if (phoneNumber != null) 'phone_number': phoneNumber,
    };
  }
}

/// Model for JWT token refresh operations.
///
/// Used for both request and response data when refreshing access tokens.
class TokenRefresh {
  /// JWT access token
  final String access;

  /// JWT refresh token
  final String refresh;

  TokenRefresh({required this.access, required this.refresh});

  factory TokenRefresh.fromJson(Map<String, dynamic> json) {
    return TokenRefresh(access: json['access'], refresh: json['refresh']);
  }

  Map<String, dynamic> toJson() {
    return {'access': access, 'refresh': refresh};
  }
}
